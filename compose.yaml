services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    container_name: db-postgres
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'
    networks:
      - private

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend-nestjs
    volumes:
      - ./backend/:/backend/
    environment:
      - APP_PORT=${BACKEND_PORT}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    command: npm run docker:start:${ENV}
    depends_on:
      - db
    networks:
      - public
      - private

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend-nextjs
    volumes:
      - ./frontend/:/frontend/\
    environment:
      - BACKEND_API_HOST=${BACKEND_HOST}
      - BACKEND_API_PORT=${BACKEND_PORT}
      - IS_BACKEND_DOCKER=1
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    command: npm run docker:start:${ENV} -- -p ${FRONTEND_PORT} --turbo
    depends_on:
      - backend
    networks:
      - public

networks:
  public:
  private: